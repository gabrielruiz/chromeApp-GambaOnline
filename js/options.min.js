function showPage(){$("body").show()}function init(){var a=window.navigator.language||navigator.browserLanguage,b;if(a.match(/en\-.+/)){b="en-US"}else{b="es-AR"}return $.getJSON("../languages/"+b+".json")}function storageLocalSet(a,b){chrome.storage.local.set(a,function(){if(b&&b.oldValue&&b.newValue){console.log("Volume changed from "+b.oldValue+" to "+b.newValue)}else{if(a.volume){console.log("Local storage volume = "+a.volume+".")}console.log("Local storage sync = "+a.sync+".")}})}function storageSyncSet(a,b){chrome.storage.sync.set({volume:a.volume},function(){if(b&&b.oldValue&&b.newValue){console.log("Sync storage saved. Old value: "+b.oldValue+" |  New Value: "+b.newValue)}else{console.log("Sync storage saved.")}})}$(document).ready(function(){init().then(function(f){var e=f,c=new Date(),d=$("#volume-input"),a=$("#volume-sync-input");$("#options-page-title").html(e.OPTIONS.SETTING_HEAD_TITLE);$("#setting-title").html(e.OPTIONS.SETTING_TITLE+":");$("#volume-option").html(e.OPTIONS.VOLUME_OPTION);$("#volume-sync-option").html(e.OPTIONS.VOLUME_SYNC_VALUE).attr("title",e.OPTIONS.VOLUME_SYNC_TITLE_ATTR);$("#resetBtn").html(e.OPTIONS.RESET_BUTTON);$("#copyright").html(c.getFullYear()+" "+e.OPTIONS.COPYRIGHT_TEXT+" - ");function b(h){var i=h.volume;if(typeof i==="undefined"){i=70}else{if(i>0){i=i*100}}console.log("Init Setting volume to "+i+".");showPage();d.slider({id:"volumeSlider",min:0,max:100,step:1,value:i,tooltip:"always"})}function g(h){a.prop("checked",h);a.bootstrapToggle({on:e.OPTIONS.CHECKBOX_ON_TEXT,off:e.OPTIONS.CHECKBOX_OFF_TEXT,size:"small"});console.log("Init Checkbox in "+h+" value.")}chrome.storage.local.get("sync",function(h){if(typeof h.sync==="undefined"||h.sync){console.log("Loading Volume from SYNC Storage.");chrome.storage.sync.get("volume",b);g(true)}else{console.log("Loading Volume from LOCAL Storage.");chrome.storage.local.get("volume",b);g(false)}});d.change(function(i){var h=i.value.newValue/100;chrome.storage.local.get("sync",function(l){var j={volume:h},k={oldValue:i.value.oldValue,newValue:i.value.newValue};if(l.sync){storageSyncSet(j,k)}else{storageLocalSet(j,k)}})});a.change(function(i){var h=d.slider("getValue")/100;if(i.target.checked){storageSyncSet({volume:h});storageLocalSet({sync:true});console.log("Checked to true and volume "+h+" saving in SYNC storage.")}else{storageLocalSet({volume:h,sync:false});console.log("Checked to false. Using LOCAL storage with volume in "+h+".")}});$("#resetBtn").click(function(){d.slider("setValue",70);storageLocalSet({volume:0.7,sync:false});if(a.is(":checked")){a.bootstrapToggle("toggle")}console.log("Sent Volume RESET to 70");console.log("Sent Sync RESET to false")});chrome.storage.onChanged.addListener(function(j,i){for(key in j){var k=j[key];if(i==="sync"){if(key==="volume"&&a.is(":checked")){var h=k.newValue*100;d.slider("setValue",h);console.log("Updating slider Volume by Sync to "+h)}else{console.log("Sync update is called but not applied in slider because is Local.")}console.log('Storage key "%s" in namespace "%s" changed. Old value was "%s", new value is "%s".',key,i,k.oldValue,k.newValue)}}})})});
function showPage(){$("body").show()}function init(){var e,o=window.navigator.language||navigator.browserLanguage;return e=o.match(/en\-.+/)?"en-US":"es-AR",$.getJSON("../languages/"+e+".json")}function storageLocalSet(e,o){chrome.storage.local.set(e,function(){o&&o.oldValue&&o.newValue?console.log("Volume changed from "+o.oldValue+" to "+o.newValue):(e.volume&&console.log("Local storage volume = "+e.volume+"."),console.log("Local storage sync = "+e.sync+"."))})}function storageSyncSet(e,o){chrome.storage.sync.set({volume:e.volume},function(){o&&o.oldValue&&o.newValue?console.log("Sync storage saved. Old value: "+o.oldValue+" |  New Value: "+o.newValue):console.log("Sync storage saved.")})}function notifyServiceWorker(e){chrome.runtime.sendMessage({target:"service-worker",type:"settingsUpdated",data:e},function(e){chrome.runtime.lastError?console.error("Error sending settings to service worker:",chrome.runtime.lastError.message):console.log("Settings sent to service worker, response:",e)})}$(document).ready(function(){init().then(function(e){function o(e){var o=70;byDefaultText="By Default.",e&&e.volume&&(o=100*e.volume,byDefaultText=""),console.log("Init Setting volume to "+o+". "+byDefaultText),showPage(),a.slider({id:"volumeSlider",min:0,max:100,step:1,value:o,tooltip:"always"})}function l(e){s.prop("checked",e),s.bootstrapToggle({on:t.OPTIONS.CHECKBOX_ON_TEXT,off:t.OPTIONS.CHECKBOX_OFF_TEXT,size:"small"}),console.log("Init Checkbox in "+e+" value.")}var t=e,n=new Date,a=$("#volume-input"),s=$("#volume-sync-input");$("#options-page-title").html(t.OPTIONS.SETTING_HEAD_TITLE),$("#setting-title").html(t.OPTIONS.SETTING_TITLE+":"),$("#volume-option").html(t.OPTIONS.VOLUME_OPTION),$("#volume-sync-option").html(t.OPTIONS.VOLUME_SYNC_VALUE).attr("title",t.OPTIONS.VOLUME_SYNC_TITLE_ATTR),$("#resetBtn").html(t.OPTIONS.RESET_BUTTON),$("#copyright").html(n.getFullYear()+" "+t.OPTIONS.COPYRIGHT_TEXT+" - "),chrome.storage.local.get("sync",function(e){e.sync?(console.log("Loading Volume from SYNC Storage."),chrome.storage.sync.get("volume",o),l(!0)):(console.log("Loading Volume from LOCAL Storage."),chrome.storage.local.get("volume",o),l(!1))}),a.change(function(e){var o=e.value.newValue/100;chrome.storage.local.get("sync",function(l){var t={volume:o},n={oldValue:e.value.oldValue,newValue:e.value.newValue};l.sync?storageSyncSet(t,n):storageLocalSet(t,n),notifyServiceWorker({volume:o})})}),s.change(function(e){var o=a.slider("getValue")/100;e.target.checked?(storageSyncSet({volume:o}),storageLocalSet({sync:!0}),console.log("Checked to true and volume "+o+" saving in SYNC storage.")):(storageLocalSet({volume:o,sync:!1}),console.log("Checked to false. Using LOCAL storage with volume in "+o+".")),notifyServiceWorker({volume:o,syncEnabled:e.target.checked})}),$("#resetBtn").click(function(){a.slider("setValue",70),storageLocalSet({volume:.7,sync:!1}),s.is(":checked")&&s.bootstrapToggle("toggle"),console.log("Sent Volume RESET to 70"),console.log("Sent Sync RESET to false"),notifyServiceWorker({volume:.7,syncEnabled:!1})}),chrome.storage.onChanged.addListener(function(e,o){for(key in e){var l=e[key];if("sync"===o){if("volume"===key&&s.is(":checked")){var t=100*l.newValue;a.slider("setValue",t),console.log("Updating slider Volume by Sync to "+t)}else console.log("Sync update is called but not applied in slider because is Local.");console.log('Storage key "%s" in namespace "%s" changed. Old value was "%s", new value is "%s".',key,o,l.oldValue,l.newValue)}}})})});